import gradio as gr
from tensorflow.keras.models import load_model
from tensorflow.keras.datasets import imdb
from tensorflow.keras.preprocessing import sequence

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–ª–æ–≤–Ω–∏–∫–∞ IMDB
word_index = imdb.get_word_index()

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª—ñ
model = load_model("model.h5")

# –û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç—É
def preprocess(text):
    words = text.lower().split()
    seq = [word_index.get(word, 2) for word in words]  # 2 ‚Äî <UNK>
    padded = sequence.pad_sequences([seq], maxlen=500)
    return padded

# –ü–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è
def predict_sentiment(text):
    x = preprocess(text)
    prediction = model.predict(x)
    return "–ü–æ–∑–∏—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–≥—É–∫ üëç" if prediction[0][0] > 0.5 else "–ù–µ–≥–∞—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–≥—É–∫ üëé"

# –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å
gr.Interface(
    fn=predict_sentiment,
    inputs=gr.Textbox(label="–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –≤—ñ–¥–≥—É–∫—É"),
    outputs=gr.Textbox(label="–†–µ–∑—É–ª—å—Ç–∞—Ç"),
    title="–ê–Ω–∞–ª—ñ–∑ —Å–µ–Ω—Ç–∏–º–µ–Ω—Ç—É —Ñ—ñ–ª—å–º—ñ–≤ IMDB",
    description="–¶—è –º–æ–¥–µ–ª—å –∞–Ω–∞–ª—ñ–∑—É—î, —á–∏ —î —Ç–µ–∫—Å—Ç –ø–æ–∑–∏—Ç–∏–≤–Ω–∏–º –∞–±–æ –Ω–µ–≥–∞—Ç–∏–≤–Ω–∏–º."
).launch()
